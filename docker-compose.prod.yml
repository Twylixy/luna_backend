services:
  database:
    image: postgres:14.2
    restart: on-failure:3
    container_name: database
    volumes:
      - db_volume:/var/lib/postgresql/data/
    env_file: ./.env.production
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - luna_network

  api:
    build:
      context: .
      dockerfile: ./docker/api/Dockerfile.prod
    image: twylix/luna_api
    container_name: api
    env_file: ./.env.production
    restart: on-failure:3
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:8000/api/status/healthcheck"
        ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - luna_network

  nginx:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile.prod
    container_name: nginx
    env_file: ./.env.production
    restart: on-failure:3
    depends_on:
      api:
        condition: service_healthy
    ports:
      - 7080:80
      - 7443:443
    networks:
      - luna_network

volumes:
  db_volume:


networks:
  luna_network:
    driver: bridge
    name: luna_network
